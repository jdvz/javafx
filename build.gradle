plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'org.javamodularity.moduleplugin' version '1.8.15'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.0.1'
}

group 'ru.dzera'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url = uri("https://oss.sonatype.org/content/repositories/snapshots")
    }
}

ext {
    junitVersion = '5.8.2'
    jacksonVersion = '2.17.1'
    log4jVersion = '3.0.0-beta2'
    apacheHttpComponentVersion = '5.3.1'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'ru.dzera.test.ktpostman'
    mainClass = 'ru.dzera.test.ktpostman.MainApp'
}
kotlin {
    jvmToolchain(11)
}

javafx {
    version = '17.0.1'
    modules = ['javafx.controls', 'javafx.graphics', 'javafx.fxml', 'javafx.swing', 'javafx.media', 'javafx.web']
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    implementation("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    implementation("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}")

    implementation('org.apache.httpcomponents.client5:httpclient5:5.3.1')
    implementation('org.apache.httpcomponents.core5:httpcore5:5.2.4')
    implementation('commons-codec:commons-codec:1.17.0')

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.13'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.5.6'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.6'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

/*
tasks.withType(JavaExec) {
    if (System.getProperty('debug', 'false') == 'true') {
        jvmArgs '-Xdebug', '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005'
    }
}*/
